{
  "version": 3,
  "sources": ["../../@capawesome/capacitor-file-picker/src/web.ts", "../../@capawesome/capacitor-file-picker/src/index.ts"],
  "sourcesContent": ["import { WebPlugin } from '@capacitor/core';\n\nimport type {\n  ConvertHeicToJpegOptions,\n  ConvertHeicToJpegResult,\n  FilePickerPlugin,\n  PermissionStatus,\n  PickFilesOptions,\n  PickFilesResult,\n  PickImagesOptions,\n  PickImagesResult,\n  PickMediaOptions,\n  PickMediaResult,\n  PickVideosOptions,\n  PickVideosResult,\n  PickedFile,\n  RequestPermissionsOptions,\n  PickDirectoryResult,\n} from './definitions';\n\nexport class FilePickerWeb extends WebPlugin implements FilePickerPlugin {\n  public readonly ERROR_PICK_FILE_CANCELED = 'pickFiles canceled.';\n\n  public async checkPermissions(): Promise<PermissionStatus> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  public async convertHeicToJpeg(\n    _options: ConvertHeicToJpegOptions,\n  ): Promise<ConvertHeicToJpegResult> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  public async pickFiles(options?: PickFilesOptions): Promise<PickFilesResult> {\n    const pickedFiles = await this.openFilePicker(options);\n    if (!pickedFiles) {\n      throw new Error(this.ERROR_PICK_FILE_CANCELED);\n    }\n    const result: PickFilesResult = {\n      files: [],\n    };\n    for (const pickedFile of pickedFiles) {\n      const file: PickedFile = {\n        blob: pickedFile,\n        modifiedAt: pickedFile.lastModified,\n        mimeType: this.getMimeTypeFromUrl(pickedFile),\n        name: this.getNameFromUrl(pickedFile),\n        path: undefined,\n        size: this.getSizeFromUrl(pickedFile),\n      };\n      if (options?.readData) {\n        file.data = await this.getDataFromFile(pickedFile);\n      }\n      result.files.push(file);\n    }\n    return result;\n  }\n\n  public async pickDirectory(): Promise<PickDirectoryResult> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  public async pickImages(\n    options?: PickImagesOptions,\n  ): Promise<PickImagesResult> {\n    return this.pickFiles({ types: ['image/*'], ...options });\n  }\n\n  public async pickMedia(options?: PickMediaOptions): Promise<PickMediaResult> {\n    return this.pickFiles({ types: ['image/*', 'video/*'], ...options });\n  }\n\n  public async pickVideos(\n    options?: PickVideosOptions,\n  ): Promise<PickVideosResult> {\n    return this.pickFiles({ types: ['video/*'], ...options });\n  }\n\n  public async requestPermissions(\n    _options?: RequestPermissionsOptions,\n  ): Promise<PermissionStatus> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  private async openFilePicker(\n    options?: PickFilesOptions,\n  ): Promise<File[] | undefined> {\n    const accept = options?.types?.join(',') || '';\n    const limit = options?.limit === undefined ? 0 : options.limit;\n    return new Promise(resolve => {\n      let onChangeFired = false;\n      const input = document.createElement('input');\n      input.type = 'file';\n      input.accept = accept;\n      input.multiple = limit === 0;\n      input.addEventListener(\n        'change',\n        () => {\n          onChangeFired = true;\n          const files = Array.from(input.files || []);\n          resolve(files);\n        },\n        { once: true },\n      );\n      // Workaround to detect when Cancel is selected in the File Selection dialog box.\n      window.addEventListener(\n        'focus',\n        async () => {\n          await this.wait(1000);\n          if (onChangeFired) {\n            return;\n          }\n          resolve(undefined);\n        },\n        { once: true },\n      );\n      input.click();\n    });\n  }\n\n  private async getDataFromFile(file: File): Promise<string> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        const result = typeof reader.result === 'string' ? reader.result : '';\n        const splittedResult = result.split('base64,');\n        const base64 = splittedResult[1] || '';\n        resolve(base64);\n      };\n      reader.onerror = error => {\n        reject(error);\n      };\n    });\n  }\n\n  private getNameFromUrl(file: File): string {\n    return file.name;\n  }\n\n  private getMimeTypeFromUrl(file: File): string {\n    return file.type;\n  }\n\n  private getSizeFromUrl(file: File): number {\n    return file.size;\n  }\n\n  private async wait(delayMs: number): Promise<void> {\n    return new Promise(resolve => setTimeout(resolve, delayMs));\n  }\n}\n", "import { registerPlugin } from '@capacitor/core';\n\nimport type { FilePickerPlugin } from './definitions';\n// See https://github.com/capawesome-team/capacitor-plugins/issues/14\nimport * as web from './web';\n\nconst FilePicker = registerPlugin<FilePickerPlugin>('FilePicker', {\n  web: () => new web.FilePickerWeb(),\n});\n\nexport * from './definitions';\nexport { FilePicker };\n"],
  "mappings": "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",
  "names": []
}
