import { ApiAbstract } from "./abstract";
import { iPagingItems } from "../interfaces/iPagingItems";
import { iPush } from "../interfaces/iPush";
import { iFilter } from "../interfaces/iFilter";
export declare class ApiPush extends ApiAbstract {
    /**
     * список пушей
     * * @param {number} page - отсчет страниц с первой, чтобы не было путаницы
     */
    getList<Keys extends keyof iPush>({ page, filters, select, }: {
        page: number;
        filters?: iFilter<iPush>;
        select: Keys[];
    }): Promise<iPagingItems<Pick<iPush, Keys>, {
        [key: string]: unknown;
    } | undefined>>;
    /**
     * количество непрочитанных пушей
     */
    countNew(): Promise<{
        totalItems: number;
    }>;
    /**
     * добавления токена для пуш уведомления
     * * @param {number} props.token - сумма выплаты
     * * @param {number} props.appStore - магазин приложений
     */
    register(props: {
        token: string;
        appStore: "App Store" | "Google Play";
    }): Promise<void>;
    /**
     * удаление токена для пуш уведомления
     * * @param {number} props.token - сумма выплаты
     * * @param {number} props.appStore - магазин приложений
     */
    delete(props: {
        token: string;
        appStore: "App Store" | "Google Play";
    }): Promise<void>;
    /**
     * Пометить пуш просмотренным view = true
     * * @param {number} props.pushId - id пуша
     */
    view({ pushId }: {
        pushId: number;
    }): Promise<void>;
}
