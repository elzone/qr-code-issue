import { iFilter } from "../interfaces/iFilter";
import { iGetNodeListProps } from "../interfaces/iGetNodeListProps";
import { iPayment } from "../interfaces/iPayment";
import { iPush } from "../interfaces/iPush";
import { iReceipt } from "../interfaces/iReceipt";
export declare const apiRouteEnv = "/env";
export declare const apiRouteList: <T>({ nodeCode, nodeGenerator, page, filters, sorters, select, perPage, subNodes, }: {
    nodeCode: string;
    nodeGenerator?: string[];
    page?: number;
    filters?: iFilter<T>;
    sorters?: string[];
    select?: string[];
    perPage?: number;
    subNodes?: boolean;
}) => string;
export declare const apiRouteFilters: <T>({ nodeCode, nodeGenerator, filters, subNodes, }: {
    nodeCode: string;
    nodeGenerator?: string[];
    filters?: iFilter<T>;
    subNodes?: boolean;
}) => string;
export declare const apiRouteItem: (nodeCode: string, itemCode: string) => string;
export declare const apiRouteItemById: (nodeCode: string, itemId: number) => string;
export declare const apiRouteNodeTree: (parent?: number) => string;
export declare const apiRouteNodeTreeContentByFilters: <T>({ parent, filters, subNodes, }: {
    parent: number;
    filters?: iFilter<T>;
    subNodes: boolean;
}) => string;
export declare const apiRouteNodeList: <T>({ page, filters, sorter, perPage, setParams }: iGetNodeListProps<T>) => string;
export declare const apiRouteNode: (nodeCode: string, nodeGenerator?: string[]) => string;
export declare const apiRouteNodeById: (nodeId: number) => string;
export declare const apiRouteNodeGeneratedLinks: (nodeCode: string, pageIndex?: number, isAll?: boolean) => string;
export declare const apiRouteCatalogList: <T>({ nodeId, page, filters, sorters, perPage, subNodes, bookmarks, }: {
    nodeId: number;
    page?: number;
    filters?: iFilter<T>;
    sorters?: string[];
    perPage?: number;
    subNodes?: boolean;
    bookmarks?: boolean;
}) => string;
export declare const apiRouteCatalogItem: (elementId: number) => string;
export declare const apiRouteCatalogInUserShop: (elementId: number) => string;
export declare const apiRouteCatalogInShopByInn: (elementId: number, inn: number) => string;
export declare const apiRouteBasketTotal: () => string;
export declare const apiRouteBasketGet: () => string;
export declare const apiRouteBasketMutate: () => string;
export declare const apiRouteBasketMoveToDraft: () => string;
export declare const apiRouteGeoDetect = "/geo/detect";
export declare const apiRouteUserGetMe = "/user/get_me";
export declare const apiRouteUserRefresh = "/user/refresh";
export declare const apiRouteUserLoginWithCode = "/user/login_with_code";
export declare const apiRouteUserEdit = "/user/edit";
export declare const apiRouteUserUploadPhoto = "/user/upload_photo";
export declare const apiRouteUserLogout = "/user/logout";
export declare const apiRouteUserDelete = "/user/delete";
export declare const apiRouteUserSetRef = "/user/set_ref";
export declare const apiRouteUserSetShopByInn = "/user/set_shop_by_inn";
export declare const apiRouteReceiptAdd = "/receipt/add";
export declare const apiRouteReceiptUpdate = "/receipt/update";
export declare const apiRouteReceiptList: ({ page, filters, sorters, select, }: {
    page?: number;
    filters?: iFilter<iReceipt>;
    sorters?: string[];
    select?: string[];
}) => string;
export declare const apiRouteReceiptItem: (id: number) => string;
export declare const apiRoutePaymentAdd = "/payment/add";
export declare const apiRoutePaymentList: ({ page, filters, sorters, select, }: {
    page?: number;
    filters?: iFilter<iPayment>;
    sorters?: string[];
    select?: string[];
}) => string;
export declare const apiRoutePaymentBalance = "/payment/balance";
export declare const apiRouteViewAdd = "/view/add";
export declare const apiRouteStatAdd = "/stat/add";
export declare const apiRouteStatGet = "/stat/get";
export declare const apiRouteBookmarksGet = "/bookmarks/get";
export declare const apiRouteBookmarksAdd = "/bookmarks/add";
export declare const apiRouteBookmarksRemove = "/bookmarks/remove";
export declare const apiRouteBookmarksCount = "/bookmarks/count";
export declare const apiRouteBannerGetRand: (type: number) => string;
export declare const apiRoutePushList: ({ page, filters, sorters, select, }: {
    page?: number;
    filters?: iFilter<iPush>;
    sorters?: string[];
    select?: string[];
}) => string;
export declare const apiRoutePushCountNew = "/push/count_new";
export declare const apiRoutePushRegister = "/push/register";
export declare const apiRoutePushDelete = "/push/delete";
export declare const apiRoutePushView = "/push/view";
